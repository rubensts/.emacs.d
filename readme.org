#+TITLE:     My Emacs Configuration
#+AUTHOR:    Rubens.TS
#+EMAIL:     rubensts@gmail.com
#+DATE:      2016-09-27
#+LANGUAGE:  en
#+PROPERTY: header-args :tangle init.el :comments org
#+OPTIONS: author:nil date:nil toc:2 title:nil e:nil
#+LaTeX_HEADER: \pagenumbering{gobble}
#+LaTeX_HEADER: \usepackage[T1]{fontenc}
#+LaTeX_HEADER: \usepackage{fontspec}
#+LaTeX_HEADER: \setmonofont[Scale=0.7]{DejaVu Sans Mono}
#+LaTeX_HEADER: \usepackage{mathpazo}
#+LaTeX_HEADER: \usepackage{geometry}
#+LaTeX_HEADER: \geometry{a4paper, margin=20mm}
#+LaTeX_HEADER: \usepackage{minted}
#+LaTeX_HEADER: \setminted{breaklines}

#+ATTR_LATEX: :width 5cm :align center :float t
#+ATTR_HTML: :width 110px
[[./img/emacs_icon.png]][fn:1]

[[id:50f37a2f-42cc-4628-b7fa-30fb85c0ffbc][About]] | [[Packages Setup]] | [[Built-in Capabilities]]

* About
:PROPERTIES:
:ID:       50f37a2f-42cc-4628-b7fa-30fb85c0ffbc
:END:

*ATTENTION - This is a work in progress*
*ATTENTION:* This configuration has been tested on Emacs 25.

** Emacs Configuration using Org-Babel

This repository contains the setup I use to customize Emacs. It is implemented
trying to follow the concept of [[http://orgmode.org/worg/org-contrib/babel/intro.html#literate-programming][Literate Programming]] through the use of [[http://orgmode.org/][Org-mode]]
and [[http://orgmode.org/worg/org-contrib/babel/][Org-Babel]] to manage all the settings in a unique Org mode file.

** Dependencies

This is a list of applications that need to be installed previously in order to
enjoy all the goodies of this configuration. Of course, you can install only the
ones you will really use and/or adapt it to the ones you prefer.

- rg ("ripgrep") or  Ag (“The Silver Searcher”)
- git
- notmuch (also a tool to fetch mail like mbsync or OfflineImap)
- GnuPG
- LaTeX and Pygments to PDF export with syntax highlighting
- MuPDF for DocView, poppler for pdf-tools
- pandoc for ox-pandoc
- pass
- Zeal
  After installing Zeal, you need to download docsets. Go to
  File->Options->Docsets, select the ones you want, and click the Download
  button.
- ImageMagick or GraphicsMagick
- gzip

** Source of Ideas

The inspiration for handling the Emacs configuration through [[http://orgmode.org/worg/org-contrib/babel/intro.html#literate-programming][Literate
Programming]] came from [[http://eschulte.github.io/emacs24-starter-kit/][Eric Schulte's emacs24-starter-kit]]. It is a really clever
concept that, among other things, keeps your Emacs configuration tidy and well
organized.

The first time I saw it being handled by a single org-mode file was on [[https://github.com/sachac/.emacs.d/blob/gh-pages/Sacha.org][Sacha
Chua's config.]] Then I came across [[https://github.com/joedicastro/dotfiles/tree/master/emacs/.emacs.d][joe di castro's emacs.d on github]], where he
automatically generates the =~/.emacs.d/init.el= directly from his =readme.org=
file. This is the solution I'm using here.

A list of Emacs Jedis, from whon I took most of the solutions applied here.
Their ~github~ pages have many interesting/clever ideas to inspire you. Also
make sure to check their blogs as well...cool stuff:

- [[https://github.com/sachac/.emacs.d/blob/gh-pages/Sacha.org][Sacha Chua]]
- [[https://github.com/joedicastro/dotfiles/tree/master/emacs][joedicastro]]
- [[https://github.com/lunaryorn/.emacs.d][lunaryorn]]
- [[https://github.com/abo-abo/oremacs][oremacs (abo-abo)]]
- [[https://github.com/angrybacon/dotemacs][angrybacon]]
- [[https://github.com/emacs-tw/awesome-emacs#interface-enhancement][awesome-emacs]]

** If using it on Mac

For installing Emacs on Mac, check these:

- [[http://emacs.stackexchange.com/questions/271/what-is-the-difference-between-aquamacs-and-other-mac-versions-of-emacs][Stackexchange - Difference between Emacs versions on mac]]
- [[http://www.reddit.com/r/emacs/comments/195163/hey_mac_users/][reddit - emacs-mac-port]]

** How it works

The file =~/.emacs.d/init.el= is one of the first standard init files read by
Emacs in order to load all its configuration. The idea here is to create
=~/.emacs.d/init.el= exporting all the code blocks contained in this current
=readme.org= file to it. This is done by [[http://orgmode.org/worg/org-contrib/babel/][Org-Babel]] through a process called
_tangling_. If a code block is marked with =:tangle no= it will be skipped.

The cool thing about this setup is that you can export the same file as
documentation to HTML, PDF, or LaTeX quite easily, e.g. to do it from Org mode
directly press =C-c C-e=, choose =h= or =l= and then one of the options to
produce the desired output. At the same time it makes the configuration
management a delight, been pretty easy to find any setting and organize them.

** Installation

Firstly, rename your current =~/.emacs.d= directory, so you can keep it safe in
case you want to get back to it:

#+BEGIN_SRC sh :tangle no
$ mv ~/.emacs.d ~/.emacs.d.disabled
#+END_SRC

Then clone this repository. It will create your new =~/.emacs.d= directory:

#+BEGIN_SRC sh :tangle no
$ git clone https://github.com/rubensts/.emacs.d.git
#+END_SRC

Code blocks on org mode can be tangled with =C-c C-v t=. This is not necessary
on this =readme.org= file as the tangling is done automatically.

The code block below is the responsable for creating the hook that will tangle a
new =~/.emacs.d/init.el= every time that this =readme.org= is saved. This also
means that alterations on the configuration have to be done on =readme.org=. Any
changes made on =~/.emacs.d/init.el= will be overwritten when =readme.org= is
saved.

#+BEGIN_SRC emacs-lisp
  ;; originaly seen at
  ;; https://github.com/larstvei/dot-emacs/blob/master/init.org
  (defun tangle-init ()
    "If the current buffer is 'readme.org' the code-blocks are
  tangled, and the tangled file is compiled."
    (when (equal (buffer-file-name)
                 (expand-file-name (concat user-emacs-directory "readme.org")))
      (call-process-shell-command
       "emacs ~/.emacs.d/readme.org --batch --eval='(org-babel-tangle)' && notify-send -a 'Emacs' 'init file tangled'" nil 0)))
  ;;(byte-compile-file (concat user-emacs-directory "init.el")))

  (add-hook 'after-save-hook 'tangle-init)
#+END_SRC

*** How to generate the first init.el file

You can notice that there isn't an =init.el= file present in this
repository. To generate it the first time you just have to run the
following command:

#+BEGIN_EXAMPLE bash 
$ /usr/bin/emacs ~/.emacs.d/readme.org --batch --eval='(org-babel-tangle)'
#+END_EXAMPLE

This will generate a =~/.emacs.d/init.el= file from this current
=readme.org= file. Remember that you just have to run the above
command once right after you have cloned this repo. After that the
=~/.emacs.d/init.el= will be recreated every time this =readme.org=
file is saved.

Because of that, there is no reason to track the =~/.emacs.d/init.el=
that is generated; by running the following command =git= will not
bother tracking it:

#+BEGIN_EXAMPLE bash
git update-index --assume-unchanged init.el
#+END_EXAMPLE

